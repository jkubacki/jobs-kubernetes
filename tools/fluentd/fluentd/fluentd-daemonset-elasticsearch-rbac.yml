---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentdconf
  namespace: fluentd
data:
  fluent-custom.conf: |
    <filter kubernetes.**>
      @type grep
      <exclude>
        key log
        pattern /healthcheck/
     </exclude>
    </filter>
    <filter kubernetes.**>
      @type grep
      <exclude>
        key log
        pattern /HealthcheckController/
      </exclude>
    </filter>
    <filter kubernetes.**>
      @type grep
      <exclude>
        key log
        pattern /Completed 200 OK in 1ms/
      </exclude>
    </filter>
    <match kubernetes.var.log.containers.**kube-system**.log>
      @type null
    </match>
---
apiVersion: v1
data:
  index_template.json: |-
    {
        "index_patterns": [
            "logstash-default*"
        ]
    }
kind: ConfigMap
metadata:
  name: es-template
  namespace: fluentd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: fluentd

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
    verbs:
      - get
      - list
      - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: fluentd
    namespace: fluentd
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: fluentd
  labels:
    k8s-app: fluentd-logging
    version: v1
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-logging
      version: v1
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: fluentd
          image: fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: FLUENT_ELASTICSEARCH_HOST
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: elasticsearch-host
            - name: FLUENT_ELASTICSEARCH_PORT
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: elasticsearch-port
            - name: FLUENT_ELASTICSEARCH_SCHEME
              value: "https"
            # Option to configure elasticsearch plugin with self signed certs
            # ================================================================
            - name: FLUENT_ELASTICSEARCH_SSL_VERIFY
              value: "false"
            # Option to configure elasticsearch plugin with tls
            # ================================================================
            - name: FLUENT_ELASTICSEARCH_SSL_VERSION
              value: "TLSv1_2"
            # X-Pack Authentication
            # =====================
            - name: FLUENT_ELASTICSEARCH_USER
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: elasticsearch-user
            - name: FLUENT_ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: elasticsearch-password
            - name: FLUENTD_SYSTEMD_CONF
              value: "disable"
            - name: FLUENT_CONTAINER_TAIL_EXCLUDE_PATH
              value: >
                [
                "/var/log/containers/fluent*",
                "/var/log/containers/argocd*",
                "/var/log/containers/elastic*",
                "/var/log/containers/ingress-nginx*",
                "/var/log/containers/kube-prometheus-stack*"
                ]
            - name: FLUENT_CONTAINER_TAIL_PARSER_TYPE
              value: /^(?<time>.+) (?<stream>stdout|stderr)( (?<logtag>.))? (?<log>.*)$/

            - name: FLUENT_ELASTICSEARCH_ENABLE_ILM
              value: "true"
            - name: FLUENT_ELASTICSEARCH_ILM_POLICY
              value: '{ "policy": { "phases": { "hot": { "min_age": "0ms", "actions": { "rollover": { "max_age": "30d", "max_size": "10gb" } } }, "delete": { "min_age": "2d", "actions": { "delete": {}}}}}}'

            - name: FLUENT_ELASTICSEARCH_TEMPLATE_FILE
              value: /host/index_template.json
            - name: FLUENT_ELASTICSEARCH_TEMPLATE_NAME
              value: "logstash-default"
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            # When actual pod logs in /var/lib/docker/containers, the following lines should be used.
            - name: dockercontainerlogdirectory
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: es-template
              mountPath: /host
              readOnly: true
            - name: fluentconfig
              mountPath: /fluentd/etc/conf.d/
              readOnly: true
            # When actual pod logs in /var/log/pods, the following lines should be used.
            # - name: dockercontainerlogdirectory
            #   mountPath: /var/log/pods
            #   readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        # When actual pod logs in /var/lib/docker/containers, the following lines should be used.
        - name: dockercontainerlogdirectory
          hostPath:
            path: /var/lib/docker/containers
        - name: es-template
          configMap:
            name: es-template
        - name: fluentconfig
          configMap:
            name: fluentdconf
        # When actual pod logs in /var/log/pods, the following lines should be used.
        # - name: dockercontainerlogdirectory
        #   hostPath:
        #     path: /var/log/pods
